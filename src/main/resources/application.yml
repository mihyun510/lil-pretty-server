spring:
  application:
    name: lilPertty 
  datasource:
    url: jdbc:mysql://localhost:3306/lilprettydb  # 데이터베이스 URL
    username: root  # 데이터베이스 사용자 이름
    password: 1234  # 데이터베이스 비밀번호
    driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL 드라이버 클래스 이름 (다른 데이터베이스는 적절한 드라이버 클래스를 사용)
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      auto-commit: true  # 자동 커밋 비활성화 (트랜잭션 관리 시 중요)
  jpa:
    #generate-ddl: false
    hibernate:
      ddl-auto: none  # 스키마 자동 업데이트 (none, update, create, create-drop)
#hibernate의 PhysicalNamingStrategyStandardImpl 전략은,
#설정한 변수 이름을 그대로 사용하여,
#@Table에서 지정한 설정대로 그대로 사용할 수 있다.
##Spring Boot의 기본 DB Physical Naming 전략은 모든 도트는 밑줄로 대체, Camel Case 대문자는 밑줄로 대체, 
#모든 테이블은 소문자로 구성 이 전략 hibernate의 Physical Naming Strategy로 변경
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl 
    show-sql: true  # SQL 쿼리를 콘솔에 출력
    properties:
      hibernate:
        globally_quoted_identifiers: true
        format_sql: true  # SQL 쿼리를 포맷하여 출력
        jdbc:
          time_zone: UTC  # JDBC의 시간대 설정		
  session:
    store-type: none
    jdbc:
      initialize-schema: always					
jwt:
  secret: GkLf28hBrtykPdzKmMCiO5w+QwKctBQzql8rV0BMy4s=

logging:
  level:
    org.springframework.security: DEBUG

